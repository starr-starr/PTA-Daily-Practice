//不变初心数是指这样一种特别的数，它分别乘 2、3、4、5、6、7、8、9 时，所得乘积各位数之和却不变。例如 18 就是这样的数：18 的 2 倍是 36，3+6=9；18 的 3 倍是 54，5+4=9；…… 18 的 9 倍是 162，1+6+2=9。对于 18 而言，9 就是它的初心。本题要求你判断任一个给定的数是否有不变的初心。
//
//输入格式：
//输入在第一行中给出一个正整数 N（≤ 100）。随后 N 行，每行给出一个不超过 10 
//5
//  的正整数。
//
//输出格式：
//对每个给定的数字，如果它有不变的初心，就在一行中输出它的初心；否则输出 NO。
//
//输入样例：
//4
//18
//256
//99792
//88672
//输出样例：
//9
//NO
//36
//NO
#include<stdio.h>
int main(){
	int num=0,sum=0,l=0,dis=0,p=0,t=0;
	int arr[101]={0};
	int brr[101]={0};
	scanf("%d",&num);
	for(int i=0;i<num;i++){
		scanf("%d",&arr[i]);
		brr[i]=arr[i];
		while(arr[i]>0){
			sum+=arr[i]%10;
			arr[i]/=10;
		}
		l=sum;
		for(int k=2;k<=9;k++){
			t=brr[i]*k;
			p=0;
			while(t>0){
				p+=t%10;
				t/=10;
			}
			if(p==l) dis++;
		}
			if(dis==8){
	 	printf("%d\n",p);
		}
	else{
		printf("No\n");
	}
	}

	return 0;
} 
